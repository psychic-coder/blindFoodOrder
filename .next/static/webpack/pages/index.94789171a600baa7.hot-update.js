"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/DeepSeek.js":
/*!************************************!*\
  !*** ./src/components/DeepSeek.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   classifyIntentFromDeepSeek: function() { return /* binding */ classifyIntentFromDeepSeek; }\n/* harmony export */ });\nasync function classifyIntentFromDeepSeek(message) {\n    var _data_choices__message_content, _data_choices__message, _data_choices_, _data_choices;\n    const prompt = \"Classify the user's message into one of the following intents:\\n  1. show_restaurants\\n  2. list_restaurants\\n  3. show_menu\\n  4. read_menu\\n  5. order_item\\n  6. nothing_matches\\n  \\n  Message: \\\"\".concat(message, '\"\\n  Respond with only the intent id.');\n    const res = await fetch(\"https://api.deepseek.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \"\n        },\n        body: JSON.stringify({\n            model: \"deepseek-chat\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: \"You are a helpful assistant.\"\n                },\n                {\n                    role: \"user\",\n                    content: prompt\n                }\n            ]\n        })\n    });\n    if (!res.ok) {\n        console.error(\"Failed to fetch intent classification\");\n        return null;\n    }\n    const data = await res.json();\n    return ((_data_choices = data.choices) === null || _data_choices === void 0 ? void 0 : (_data_choices_ = _data_choices[0]) === null || _data_choices_ === void 0 ? void 0 : (_data_choices__message = _data_choices_.message) === null || _data_choices__message === void 0 ? void 0 : (_data_choices__message_content = _data_choices__message.content) === null || _data_choices__message_content === void 0 ? void 0 : _data_choices__message_content.trim()) || null;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EZWVwU2Vlay5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sZUFBZUEsMkJBQTJCQyxPQUFPO1FBaUM3Q0MsZ0NBQUFBLHdCQUFBQSxnQkFBQUE7SUFoQ1AsTUFBTUMsU0FBUyx5TUFRRyxPQUFSRixTQUFRO0lBR2xCLE1BQU1HLE1BQU0sTUFBTUMsTUFBTSxnREFBZ0Q7UUFDdEVDLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQjtZQUNoQkMsZUFBZ0I7UUFDbEI7UUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQ25CQyxPQUFPO1lBQ1BDLFVBQVU7Z0JBQ1I7b0JBQUVDLE1BQU07b0JBQVVDLFNBQVM7Z0JBQStCO2dCQUMxRDtvQkFBRUQsTUFBTTtvQkFBUUMsU0FBU1o7Z0JBQU87YUFDakM7UUFDSDtJQUNGO0lBRUEsSUFBSSxDQUFDQyxJQUFJWSxFQUFFLEVBQUU7UUFDWEMsUUFBUUMsS0FBSyxDQUFDO1FBQ2QsT0FBTztJQUNUO0lBRUEsTUFBTWhCLE9BQU8sTUFBTUUsSUFBSWUsSUFBSTtJQUMzQixPQUFPakIsRUFBQUEsZ0JBQUFBLEtBQUtrQixPQUFPLGNBQVpsQixxQ0FBQUEsaUJBQUFBLGFBQWMsQ0FBQyxFQUFFLGNBQWpCQSxzQ0FBQUEseUJBQUFBLGVBQW1CRCxPQUFPLGNBQTFCQyw4Q0FBQUEsaUNBQUFBLHVCQUE0QmEsT0FBTyxjQUFuQ2IscURBQUFBLCtCQUFxQ21CLElBQUksT0FBTTtBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9EZWVwU2Vlay5qcz80NjQzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBhc3luYyBmdW5jdGlvbiBjbGFzc2lmeUludGVudEZyb21EZWVwU2VlayhtZXNzYWdlKSB7XG4gICAgY29uc3QgcHJvbXB0ID0gYENsYXNzaWZ5IHRoZSB1c2VyJ3MgbWVzc2FnZSBpbnRvIG9uZSBvZiB0aGUgZm9sbG93aW5nIGludGVudHM6XG4gIDEuIHNob3dfcmVzdGF1cmFudHNcbiAgMi4gbGlzdF9yZXN0YXVyYW50c1xuICAzLiBzaG93X21lbnVcbiAgNC4gcmVhZF9tZW51XG4gIDUuIG9yZGVyX2l0ZW1cbiAgNi4gbm90aGluZ19tYXRjaGVzXG4gIFxuICBNZXNzYWdlOiBcIiR7bWVzc2FnZX1cIlxuICBSZXNwb25kIHdpdGggb25seSB0aGUgaW50ZW50IGlkLmA7XG4gIFxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS5kZWVwc2Vlay5jb20vdjEvY2hhdC9jb21wbGV0aW9ucycsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7XCJcIn1gXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBtb2RlbDogJ2RlZXBzZWVrLWNoYXQnLFxuICAgICAgICBtZXNzYWdlczogW1xuICAgICAgICAgIHsgcm9sZTogJ3N5c3RlbScsIGNvbnRlbnQ6ICdZb3UgYXJlIGEgaGVscGZ1bCBhc3Npc3RhbnQuJyB9LFxuICAgICAgICAgIHsgcm9sZTogJ3VzZXInLCBjb250ZW50OiBwcm9tcHQgfVxuICAgICAgICBdXG4gICAgICB9KVxuICAgIH0pO1xuICBcbiAgICBpZiAoIXJlcy5vaykge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGZldGNoIGludGVudCBjbGFzc2lmaWNhdGlvbicpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICBcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICByZXR1cm4gZGF0YS5jaG9pY2VzPy5bMF0/Lm1lc3NhZ2U/LmNvbnRlbnQ/LnRyaW0oKSB8fCBudWxsO1xuICB9XG4gICJdLCJuYW1lcyI6WyJjbGFzc2lmeUludGVudEZyb21EZWVwU2VlayIsIm1lc3NhZ2UiLCJkYXRhIiwicHJvbXB0IiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwibW9kZWwiLCJtZXNzYWdlcyIsInJvbGUiLCJjb250ZW50Iiwib2siLCJjb25zb2xlIiwiZXJyb3IiLCJqc29uIiwiY2hvaWNlcyIsInRyaW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/DeepSeek.js\n"));

/***/ })

});