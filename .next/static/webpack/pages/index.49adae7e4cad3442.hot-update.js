"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/DeepSeek.js":
/*!************************************!*\
  !*** ./src/components/DeepSeek.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processUserInput: function() { return /* binding */ processUserInput; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nconst OPENROUTER_API_KEY = process.env.NEXT_PUBLIC_OPENROUTER_API_KEY;\nconst SITE_URL = \"https://yourdomain.com\";\n// Debugging cache\nlet lastRequest = null;\nlet lastResponse = null;\nasync function processUserInput(message) {\n    // Normalize input\n    const cleanMessage = message.trim().toLowerCase();\n    /* PHASE 1: INTENT CLASSIFICATION */ const intent = await classifyIntent(cleanMessage);\n    // If clear intent found, return it immediately\n    if (!intent.startsWith(\"6|\")) {\n        return {\n            type: \"intent\",\n            result: intent\n        };\n    }\n    /* PHASE 2: FOOD TAG EXTRACTION (Fallback) */ const tags = await extractFoodTags(cleanMessage);\n    if (tags.length > 0) {\n        return {\n            type: \"food_preferences\",\n            result: tags\n        };\n    }\n    /* PHASE 3: ULTIMATE FALLBACK */ return {\n        type: \"unknown\",\n        result: \"Could not understand request\"\n    };\n}\n// 1. Intent Classifier\nasync function classifyIntent(message) {\n    const hardcodedIntents = {\n        \"show me restaurants\": \"1|show_restaurants\",\n        \"list restaurants\": \"2|list_restaurants\"\n    };\n    if (hardcodedIntents[message]) {\n        return hardcodedIntents[message];\n    }\n    const prompt = '\\n  INTENT CLASSIFICATION\\n  ====================\\n  Options:\\n  1|show_restaurants - User wants to see listings\\n  2|list_restaurants - User wants to hear names\\n  3|show_menu - View specific menu\\n  4|read_menu - Hear menu items\\n  5|order_item - Direct food order\\n  6|nothing_matches - No match\\n\\n  Examples:\\n  \"Display restaurants\" → 1|show_restaurants\\n  \"Tell me pizza places\" → 2|list_restaurants\\n  \"Show Burger King menu\" → 3|show_menu\\n\\n  Message: \"'.concat(message, '\"\\n  Respond with \"ID|INTENT\" or \"6|nothing_matches\"');\n    try {\n        const response = await callLanguageAPI(prompt);\n        return validateIntentResponse(response);\n    } catch (error) {\n        console.error(\"Intent classification failed:\", error);\n        return \"6|nothing_matches\";\n    }\n}\n// 2. Food Tag Extractor\nasync function extractFoodTags(message) {\n    const quickTags = {\n        pregnant: [\n            \"sour\"\n        ],\n        vegetarian: [\n            \"vegetarian\"\n        ]\n    };\n    // Quick keyword check\n    for (const [keyword, tags] of Object.entries(quickTags)){\n        if (message.includes(keyword)) {\n            return tags;\n        }\n    }\n    const prompt = '\\n  FOOD PREFERENCE ANALYSIS\\n  ========================\\n  Extract ALL applicable tags from:\\n  \"'.concat(message, '\"\\n\\n  Categories:\\n  - Flavors: spicy, sweet, sour, etc.\\n  - Diets: vegetarian, vegan, etc.\\n  - Health: pregnant, diabetic, etc.\\n  - Texture: crunchy, creamy, etc.\\n  - Verbs: craving, want, need\\n\\n  Respond with comma-separated tags or \"none\".\\n  Examples:\\n  \"I\\'m pregnant\" → \"pregnant,sour\"\\n  \"Want spicy tacos\" → \"spicy,want\"');\n    try {\n        const response = await callLanguageAPI(prompt);\n        return parseTags(response);\n    } catch (error) {\n        console.error(\"Tag extraction failed:\", error);\n        return [];\n    }\n}\n// Shared API Call Function\nasync function callLanguageAPI(prompt) {\n    lastRequest = {\n        prompt\n    };\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"https://openrouter.ai/api/v1/chat/completions\", {\n        model: \"deepseek-chat\",\n        messages: [\n            {\n                role: \"system\",\n                content: \"Respond concisely.\"\n            },\n            {\n                role: \"user\",\n                content: prompt\n            }\n        ],\n        temperature: 0.3,\n        max_tokens: 30\n    }, {\n        headers: {\n            \"Authorization\": \"Bearer \".concat(OPENROUTER_API_KEY),\n            \"HTTP-Referer\": SITE_URL,\n            \"Content-Type\": \"application/json\"\n        },\n        timeout: 8000\n    });\n    lastResponse = response.data;\n    return response.data.choices[0].message.content.trim();\n}\n// Response Validators\nfunction validateIntentResponse(response) {\n    if (/^[1-6]\\|[\\w_]+$/.test(response)) {\n        return response;\n    }\n    return \"6|nothing_matches\";\n}\nfunction parseTags(response) {\n    return response === \"none\" ? [] : response.split(\",\").map((tag)=>tag.trim()).filter((tag)=>tag.length > 0);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QndCLElBQUksQ0FBQ3hCLFdBQVc7UUFDcEMsT0FBT0E7SUFDVDtJQUNBLE9BQU87QUFDVDtBQUVBLFNBQVNZLFVBQVVaLFFBQVE7SUFDekIsT0FBT0EsYUFBYSxTQUFTLEVBQUUsR0FDN0JBLFNBQVN5QixLQUFLLENBQUMsS0FDWkMsR0FBRyxDQUFDQyxDQUFBQSxNQUFPQSxJQUFJdkMsSUFBSSxJQUNuQndDLE1BQU0sQ0FBQ0QsQ0FBQUEsTUFBT0EsSUFBSTlCLE1BQU0sR0FBRztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9EZWVwU2Vlay5qcz80NjQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5cbmNvbnN0IE9QRU5ST1VURVJfQVBJX0tFWSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX09QRU5ST1VURVJfQVBJX0tFWTtcbmNvbnN0IFNJVEVfVVJMID0gJ2h0dHBzOi8veW91cmRvbWFpbi5jb20nO1xuXG4vLyBEZWJ1Z2dpbmcgY2FjaGVcbmxldCBsYXN0UmVxdWVzdCA9IG51bGw7XG5sZXQgbGFzdFJlc3BvbnNlID0gbnVsbDtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByb2Nlc3NVc2VySW5wdXQobWVzc2FnZSkge1xuICAvLyBOb3JtYWxpemUgaW5wdXRcbiAgY29uc3QgY2xlYW5NZXNzYWdlID0gbWVzc2FnZS50cmltKCkudG9Mb3dlckNhc2UoKTtcblxuICAvKiBQSEFTRSAxOiBJTlRFTlQgQ0xBU1NJRklDQVRJT04gKi9cbiAgY29uc3QgaW50ZW50ID0gYXdhaXQgY2xhc3NpZnlJbnRlbnQoY2xlYW5NZXNzYWdlKTtcbiAgXG4gIC8vIElmIGNsZWFyIGludGVudCBmb3VuZCwgcmV0dXJuIGl0IGltbWVkaWF0ZWx5XG4gIGlmICghaW50ZW50LnN0YXJ0c1dpdGgoJzZ8JykpIHtcbiAgICByZXR1cm4geyB0eXBlOiAnaW50ZW50JywgcmVzdWx0OiBpbnRlbnQgfTtcbiAgfVxuXG4gIC8qIFBIQVNFIDI6IEZPT0QgVEFHIEVYVFJBQ1RJT04gKEZhbGxiYWNrKSAqL1xuICBjb25zdCB0YWdzID0gYXdhaXQgZXh0cmFjdEZvb2RUYWdzKGNsZWFuTWVzc2FnZSk7XG4gIFxuICBpZiAodGFncy5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIHsgXG4gICAgICB0eXBlOiAnZm9vZF9wcmVmZXJlbmNlcycsXG4gICAgICByZXN1bHQ6IHRhZ3MgXG4gICAgfTtcbiAgfVxuXG4gIC8qIFBIQVNFIDM6IFVMVElNQVRFIEZBTExCQUNLICovXG4gIHJldHVybiB7IFxuICAgIHR5cGU6ICd1bmtub3duJyxcbiAgICByZXN1bHQ6ICdDb3VsZCBub3QgdW5kZXJzdGFuZCByZXF1ZXN0JyBcbiAgfTtcbn1cblxuLy8gMS4gSW50ZW50IENsYXNzaWZpZXJcbmFzeW5jIGZ1bmN0aW9uIGNsYXNzaWZ5SW50ZW50KG1lc3NhZ2UpIHtcbiAgY29uc3QgaGFyZGNvZGVkSW50ZW50cyA9IHtcbiAgICAnc2hvdyBtZSByZXN0YXVyYW50cyc6ICcxfHNob3dfcmVzdGF1cmFudHMnLFxuICAgICdsaXN0IHJlc3RhdXJhbnRzJzogJzJ8bGlzdF9yZXN0YXVyYW50cycsXG4gICAgLy8gLi4uIChvdGhlciBoYXJkY29kZWQgaW50ZW50cylcbiAgfTtcblxuICBpZiAoaGFyZGNvZGVkSW50ZW50c1ttZXNzYWdlXSkge1xuICAgIHJldHVybiBoYXJkY29kZWRJbnRlbnRzW21lc3NhZ2VdO1xuICB9XG5cbiAgY29uc3QgcHJvbXB0ID0gYFxuICBJTlRFTlQgQ0xBU1NJRklDQVRJT05cbiAgPT09PT09PT09PT09PT09PT09PT1cbiAgT3B0aW9uczpcbiAgMXxzaG93X3Jlc3RhdXJhbnRzIC0gVXNlciB3YW50cyB0byBzZWUgbGlzdGluZ3NcbiAgMnxsaXN0X3Jlc3RhdXJhbnRzIC0gVXNlciB3YW50cyB0byBoZWFyIG5hbWVzXG4gIDN8c2hvd19tZW51IC0gVmlldyBzcGVjaWZpYyBtZW51XG4gIDR8cmVhZF9tZW51IC0gSGVhciBtZW51IGl0ZW1zXG4gIDV8b3JkZXJfaXRlbSAtIERpcmVjdCBmb29kIG9yZGVyXG4gIDZ8bm90aGluZ19tYXRjaGVzIC0gTm8gbWF0Y2hcblxuICBFeGFtcGxlczpcbiAgXCJEaXNwbGF5IHJlc3RhdXJhbnRzXCIg4oaSIDF8c2hvd19yZXN0YXVyYW50c1xuICBcIlRlbGwgbWUgcGl6emEgcGxhY2VzXCIg4oaSIDJ8bGlzdF9yZXN0YXVyYW50c1xuICBcIlNob3cgQnVyZ2VyIEtpbmcgbWVudVwiIOKGkiAzfHNob3dfbWVudVxuXG4gIE1lc3NhZ2U6IFwiJHttZXNzYWdlfVwiXG4gIFJlc3BvbmQgd2l0aCBcIklEfElOVEVOVFwiIG9yIFwiNnxub3RoaW5nX21hdGNoZXNcImA7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNhbGxMYW5ndWFnZUFQSShwcm9tcHQpO1xuICAgIHJldHVybiB2YWxpZGF0ZUludGVudFJlc3BvbnNlKHJlc3BvbnNlKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdJbnRlbnQgY2xhc3NpZmljYXRpb24gZmFpbGVkOicsIGVycm9yKTtcbiAgICByZXR1cm4gJzZ8bm90aGluZ19tYXRjaGVzJztcbiAgfVxufVxuXG4vLyAyLiBGb29kIFRhZyBFeHRyYWN0b3JcbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RGb29kVGFncyhtZXNzYWdlKSB7XG4gIGNvbnN0IHF1aWNrVGFncyA9IHtcbiAgICBwcmVnbmFudDogWydzb3VyJ10sXG4gICAgdmVnZXRhcmlhbjogWyd2ZWdldGFyaWFuJ10sXG4gICAgLy8gLi4uIChvdGhlciBxdWljayB0YWdzKVxuICB9O1xuXG4gIC8vIFF1aWNrIGtleXdvcmQgY2hlY2tcbiAgZm9yIChjb25zdCBba2V5d29yZCwgdGFnc10gb2YgT2JqZWN0LmVudHJpZXMocXVpY2tUYWdzKSkge1xuICAgIGlmIChtZXNzYWdlLmluY2x1ZGVzKGtleXdvcmQpKSB7XG4gICAgICByZXR1cm4gdGFncztcbiAgICB9XG4gIH1cblxuICBjb25zdCBwcm9tcHQgPSBgXG4gIEZPT0QgUFJFRkVSRU5DRSBBTkFMWVNJU1xuICA9PT09PT09PT09PT09PT09PT09PT09PT1cbiAgRXh0cmFjdCBBTEwgYXBwbGljYWJsZSB0YWdzIGZyb206XG4gIFwiJHttZXNzYWdlfVwiXG5cbiAgQ2F0ZWdvcmllczpcbiAgLSBGbGF2b3JzOiBzcGljeSwgc3dlZXQsIHNvdXIsIGV0Yy5cbiAgLSBEaWV0czogdmVnZXRhcmlhbiwgdmVnYW4sIGV0Yy5cbiAgLSBIZWFsdGg6IHByZWduYW50LCBkaWFiZXRpYywgZXRjLlxuICAtIFRleHR1cmU6IGNydW5jaHksIGNyZWFteSwgZXRjLlxuICAtIFZlcmJzOiBjcmF2aW5nLCB3YW50LCBuZWVkXG5cbiAgUmVzcG9uZCB3aXRoIGNvbW1hLXNlcGFyYXRlZCB0YWdzIG9yIFwibm9uZVwiLlxuICBFeGFtcGxlczpcbiAgXCJJJ20gcHJlZ25hbnRcIiDihpIgXCJwcmVnbmFudCxzb3VyXCJcbiAgXCJXYW50IHNwaWN5IHRhY29zXCIg4oaSIFwic3BpY3ksd2FudFwiYDtcblxuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2FsbExhbmd1YWdlQVBJKHByb21wdCk7XG4gICAgcmV0dXJuIHBhcnNlVGFncyhyZXNwb25zZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignVGFnIGV4dHJhY3Rpb24gZmFpbGVkOicsIGVycm9yKTtcbiAgICByZXR1cm4gW107XG4gIH1cbn1cblxuLy8gU2hhcmVkIEFQSSBDYWxsIEZ1bmN0aW9uXG5hc3luYyBmdW5jdGlvbiBjYWxsTGFuZ3VhZ2VBUEkocHJvbXB0KSB7XG4gIGxhc3RSZXF1ZXN0ID0geyBwcm9tcHQgfTtcbiAgXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdChcbiAgICAnaHR0cHM6Ly9vcGVucm91dGVyLmFpL2FwaS92MS9jaGF0L2NvbXBsZXRpb25zJyxcbiAgICB7XG4gICAgICBtb2RlbDogJ2RlZXBzZWVrLWNoYXQnLFxuICAgICAgbWVzc2FnZXM6IFtcbiAgICAgICAgeyByb2xlOiAnc3lzdGVtJywgY29udGVudDogJ1Jlc3BvbmQgY29uY2lzZWx5LicgfSxcbiAgICAgICAgeyByb2xlOiAndXNlcicsIGNvbnRlbnQ6IHByb21wdCB9XG4gICAgICBdLFxuICAgICAgdGVtcGVyYXR1cmU6IDAuMyxcbiAgICAgIG1heF90b2tlbnM6IDMwXG4gICAgfSxcbiAgICB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke09QRU5ST1VURVJfQVBJX0tFWX1gLFxuICAgICAgICAnSFRUUC1SZWZlcmVyJzogU0lURV9VUkwsXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH0sXG4gICAgICB0aW1lb3V0OiA4MDAwXG4gICAgfVxuICApO1xuXG4gIGxhc3RSZXNwb25zZSA9IHJlc3BvbnNlLmRhdGE7XG4gIHJldHVybiByZXNwb25zZS5kYXRhLmNob2ljZXNbMF0ubWVzc2FnZS5jb250ZW50LnRyaW0oKTtcbn1cblxuLy8gUmVzcG9uc2UgVmFsaWRhdG9yc1xuZnVuY3Rpb24gdmFsaWRhdGVJbnRlbnRSZXNwb25zZShyZXNwb25zZSkge1xuICBpZiAoL15bMS02XVxcfFtcXHdfXSskLy50ZXN0KHJlc3BvbnNlKSkge1xuICAgIHJldHVybiByZXNwb25zZTtcbiAgfVxuICByZXR1cm4gJzZ8bm90aGluZ19tYXRjaGVzJztcbn1cblxuZnVuY3Rpb24gcGFyc2VUYWdzKHJlc3BvbnNlKSB7XG4gIHJldHVybiByZXNwb25zZSA9PT0gJ25vbmUnID8gW10gOiBcbiAgICByZXNwb25zZS5zcGxpdCgnLCcpXG4gICAgICAubWFwKHRhZyA9PiB0YWcudHJpbSgpKVxuICAgICAgLmZpbHRlcih0YWcgPT4gdGFnLmxlbmd0aCA+IDApO1xufSJdLCJuYW1lcyI6WyJheGlvcyIsIk9QRU5ST1VURVJfQVBJX0tFWSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19PUEVOUk9VVEVSX0FQSV9LRVkiLCJTSVRFX1VSTCIsImxhc3RSZXF1ZXN0IiwibGFzdFJlc3BvbnNlIiwicHJvY2Vzc1VzZXJJbnB1dCIsIm1lc3NhZ2UiLCJjbGVhbk1lc3NhZ2UiLCJ0cmltIiwidG9Mb3dlckNhc2UiLCJpbnRlbnQiLCJjbGFzc2lmeUludGVudCIsInN0YXJ0c1dpdGgiLCJ0eXBlIiwicmVzdWx0IiwidGFncyIsImV4dHJhY3RGb29kVGFncyIsImxlbmd0aCIsImhhcmRjb2RlZEludGVudHMiLCJwcm9tcHQiLCJyZXNwb25zZSIsImNhbGxMYW5ndWFnZUFQSSIsInZhbGlkYXRlSW50ZW50UmVzcG9uc2UiLCJlcnJvciIsImNvbnNvbGUiLCJxdWlja1RhZ3MiLCJwcmVnbmFudCIsInZlZ2V0YXJpYW4iLCJrZXl3b3JkIiwiT2JqZWN0IiwiZW50cmllcyIsImluY2x1ZGVzIiwicGFyc2VUYWdzIiwicG9zdCIsIm1vZGVsIiwibWVzc2FnZXMiLCJyb2xlIiwiY29udGVudCIsInRlbXBlcmF0dXJlIiwibWF4X3Rva2VucyIsImhlYWRlcnMiLCJ0aW1lb3V0IiwiZGF0YSIsImNob2ljZXMiLCJ0ZXN0Iiwic3BsaXQiLCJtYXAiLCJ0YWciLCJmaWx0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/DeepSeek.js\n"));

/***/ })

});